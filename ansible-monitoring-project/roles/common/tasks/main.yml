# This playbook is designed to be OS-agnostic and will install the necessary packages
# and create the required user and group for the Node Exporter service.
# It uses the variables defined in group_vars to determine the correct package manager,
# packages, and user/group settings based on the target OS.
# The playbook will also ensure that the Node Exporter service is set up correctly
# and that the necessary firewall rules are applied.

- name: Ensure required system packages are installed
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ common_packages }}" # <-- Uses the OS-specific common_packages list
  register: install_common_packages_result # Optional: register the output for debugging

- name: Debug common package installation result (Optional)
  ansible.builtin.debug:
    var: install_common_packages_result # <-- Print the whole registered variable
  when: install_common_packages_result is changed # Only show debug if something happened

- name: Ensure firewalld is stopped and disabled on CentOS
  ansible.builtin.systemd:
    name: firewalld
    state: stopped # Ensure it's stopped
    enabled: no    # Ensure it doesn't start on boot
  when: ansible_os_family == "RedHat"
  ignore_errors: yes # Ignore if firewalld wasn't even installed/running

# Ensure iptables and ip6tables services are running and enabled on CentOS
- name: Ensure iptables services are running and enabled on CentOS
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - iptables
    - ip6tables
  when: ansible_os_family == "RedHat"
  
- name: Ensure the 'node_exporter' group exists
  ansible.builtin.group:
    name: "{{ node_exporter_group }}" # <-- Uses the node_exporter_group variable
    state: present
  register: create_group_result

- name: Ensure the 'node_exporter' user exists
  ansible.builtin.user:
    name: "{{ node_exporter_user }}" # <-- Uses the node_exporter_user variable
    group: "{{ node_exporter_group }}" # <-- Uses the node_exporter_group variable
    system: yes
    shell: "{{ node_exporter_shell }}" # <-- Uses the OS-specific node_exporter_shell
    create_home: no # Node exporter runs without a home directory
    state: present
  register: create_user_result